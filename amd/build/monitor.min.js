define("quizaccess_announcements/monitor",["exports","./repository","core/str"],(function(_exports,_repository,_str){function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}var quizid,studentinterval,delay,hcont,tcont,ecnt;function clearclasses(row){row.classList.remove("table-success"),row.classList.remove("table-warning"),row.classList.remove("table-danger")}function updatestudentnow(ntbody,last){return function(student){var row=tcont.querySelector("tr.u_"+student.userid);if(row){try{clearclasses(row),row.querySelector("td.cell.time").innerHTML=student.str,row.querySelector("td.cell.ago").innerHTML=student.ago,student.ago>2*studentinterval?row.classList.add("table-danger"):student.ago>studentinterval||null!==last&&last>student.time?row.classList.add("table-warning"):row.classList.add("table-success")}catch(e){window.console.error("Error updating student status",e),ecnt=10}ntbody.appendChild(row)}else window.console.log("Unable to find row for student "+student.userid)}}function fetchstatus(){return _fetchstatus.apply(this,arguments)}function _fetchstatus(){return(_fetchstatus=_asyncToGenerator(regeneratorRuntime.mark((function _callee(){var getstatusp;return regeneratorRuntime.wrap((function(_context){for(;;)switch(_context.prev=_context.next){case 0:return getstatusp=(0,_repository.getstatus)(quizid).then((function(statret){ecnt=0,hcont.innerHTML=statret.last.str;var ntbody=document.createElement("tbody");statret.status.forEach(updatestudentnow(ntbody,statret.last.time));for(var row=tcont.rows[0];row;)clearclasses(row),ntbody.appendChild(row),row=tcont.rows[0];return tcont.replaceWith(ntbody),tcont=ntbody,statret})).catch((function(err){return window.console.error("Error in AJAX request",err),ecnt++,err})),_context.next=3,getstatusp;case 3:ecnt<5?window.setTimeout(fetchstatus,delay):(0,_str.get_string)("monitor_ajax_error","quizaccess_announcements").then((function(str){hcont.innerHTML=str})).catch((function(err){window.console.error("Error getting string",err),hcont.innerHTML="Error fetching student status. Additionally, error fetching error string."}));case 4:case"end":return _context.stop()}}),_callee)})))).apply(this,arguments)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=function(qid,checkinterval,interval,lastid,contid){if(quizid=qid,studentinterval=parseInt(checkinterval),delay=1e3*parseInt(interval),hcont=document.getElementById(lastid),tcont=document.getElementById(contid),ecnt=0,!(tcont&&(tcont=tcont.querySelector("tbody"))))return void window.console.error("Unable to find table body to update.",contid);window.setTimeout(fetchstatus,delay)}}));

//# sourceMappingURL=monitor.min.js.map